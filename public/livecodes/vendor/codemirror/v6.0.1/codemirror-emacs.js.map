{
  "version": 3,
  "sources": ["../../../../../node_modules/@replit/codemirror-emacs/dist/index.js"],
  "sourcesContent": ["import { Prec, StateEffect, StateField, MapMode, EditorSelection } from '@codemirror/state';\nimport { EditorView, Direction, ViewPlugin, showPanel } from '@codemirror/view';\nimport * as commands from '@codemirror/commands';\nimport { startCompletion } from '@codemirror/autocomplete';\nimport { openSearchPanel } from '@codemirror/search';\n\nclass Piece {\n    constructor(left, top, height, className, letter, partial) {\n        this.left = left;\n        this.top = top;\n        this.height = height;\n        this.className = className;\n        this.letter = letter;\n        this.partial = partial;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        this.adjust(elt);\n        return elt;\n    }\n    adjust(elt) {\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        elt.style.height = this.height + \"px\";\n        elt.style.lineHeight = this.height + \"px\";\n        elt.style.color = this.partial ? \"transparent\" : \"\";\n        elt.className = this.className;\n        elt.textContent = this.letter;\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.letter == p.letter && this.height == p.height &&\n            this.className == p.className;\n    }\n}\nclass BlockCursorPlugin {\n    constructor(view) {\n        this.view = view;\n        this.rangePieces = [];\n        this.cursors = [];\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) };\n        this.cursorLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.cursorLayer.className = \"cm-cursorLayer cm-vimCursorLayer\";\n        this.cursorLayer.setAttribute(\"aria-hidden\", \"true\");\n        view.requestMeasure(this.measureReq);\n        this.setBlinkRate();\n    }\n    setBlinkRate() {\n        this.cursorLayer.style.animationDuration = 1200 + \"ms\";\n    }\n    update(update) {\n        if (update.selectionSet || update.geometryChanged || update.viewportChanged) {\n            this.view.requestMeasure(this.measureReq);\n            this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        }\n    }\n    scheduleRedraw() {\n        this.view.requestMeasure(this.measureReq);\n    }\n    readPos() {\n        let { state } = this.view;\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.main;\n            let piece = measureCursor(null, this.view, r, prim);\n            if (piece)\n                cursors.push(piece);\n        }\n        return { cursors };\n    }\n    drawSel({ cursors }) {\n        if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {\n            let oldCursors = this.cursorLayer.children;\n            if (oldCursors.length !== cursors.length) {\n                this.cursorLayer.textContent = \"\";\n                for (const c of cursors)\n                    this.cursorLayer.appendChild(c.draw());\n            }\n            else {\n                cursors.forEach((c, idx) => c.adjust(oldCursors[idx]));\n            }\n            this.cursors = cursors;\n        }\n    }\n    destroy() {\n        this.cursorLayer.remove();\n    }\n}\nconst themeSpec = {\n    \".cm-line\": {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" },\n        \"&::selection\": { backgroundColor: \"transparent !important\" },\n        caretColor: \"transparent !important\",\n    },\n    \".cm-fat-cursor\": {\n        position: \"absolute\",\n        background: \"#ff9696\",\n        border: \"none\",\n        whiteSpace: \"pre\",\n    },\n    \"&:not(.cm-focused) .cm-fat-cursor\": {\n        background: \"none\",\n        outline: \"solid 1px #ff9696\"\n    },\n};\nconst hideNativeSelection = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.theme(themeSpec));\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth;\n    return { left: left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction measureCursor(cm, view, cursor, primary) {\n    let head = cursor.head;\n    var hCoeff = 1;\n    let pos = view.coordsAtPos(head, cursor.assoc || 1);\n    if (!pos)\n        return null;\n    let base = getBase(view);\n    let letter = head < view.state.doc.length && view.state.sliceDoc(head, head + 1);\n    if (!letter || letter == \"\\n\" || letter == \"\\r\")\n        letter = \"\\xa0\";\n    let h = (pos.bottom - pos.top);\n    return new Piece(pos.left - base.left, pos.top - base.top + h * (1 - hCoeff), h * hCoeff, primary ? \"cm-fat-cursor cm-cursor-primary\" : \"cm-fat-cursor cm-cursor-secondary\", letter, hCoeff != 1);\n}\n\nconst emacsStyle = /*@__PURE__*/EditorView.theme({\n    \".cm-emacsMode .cm-cursorLayer:not(.cm-vimCursorLayer)\": {\n        display: \"none\",\n    },\n    \".cm-vim-panel\": {\n        padding: \"5px 10px\",\n        backgroundColor: \"#fffa8f\",\n        fontFamily: \"monospace\",\n    },\n    \".cm-vim-panel input\": {\n        border: \"none\",\n        outline: \"none\",\n        backgroundColor: \"#fffa8f\",\n    },\n});\nconst emacsPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.status = \"\";\n        this.view = view;\n        this.em = new EmacsHandler(view);\n        this.blockCursor = new BlockCursorPlugin(view);\n        this.view.scrollDOM.classList.add(\"cm-emacsMode\");\n        /*this.em.on(\"dialog\", () => {\n          view.dispatch({\n            effects: showEmacsPanel.of(!!this.cm.state.dialog)\n          })\n        });*/\n    }\n    update(update) {\n        if (update.docChanged) {\n            this.em.$emacsMark = null;\n            this.em.updateMarksOnChange(update.changes);\n        }\n        /*if (update.selectionSet) {\n          this.em.onSelectionChange()\n        }\n        if (update.viewportChanged) {\n          // scroll\n        }\n        if (this.em.curOp && !this.em.curOp.isVimOp) {\n          this.em.onBeforeEndOperation();\n        }/**/\n        this.blockCursor.update(update);\n    }\n    destroy() {\n        this.view.scrollDOM.classList.remove(\"cm-emacsMode\");\n        this.blockCursor.destroy();\n    }\n}, {\n    eventHandlers: {\n        keydown: function (e, view) {\n            var result = this.em.handleKeyboard(e);\n            return !!result;\n        },\n        mousedown: function () {\n            this.em.$emacsMark = null;\n        }\n    }\n});\nconst showVimPanel = /*@__PURE__*/StateEffect.define();\nconst vimPanelState = /*@__PURE__*/StateField.define({\n    create: () => false,\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(showVimPanel))\n                value = e.value;\n        return value;\n    },\n    provide: f => {\n        return showPanel.from(f, on => on ? createVimPanel : null);\n    }\n});\nfunction createVimPanel(view) {\n    let dom = document.createElement(\"div\");\n    dom.className = \"cm-vim-panel\";\n    return { top: false, dom };\n}\nfunction emacs(options = {}) {\n    return [\n        emacsStyle,\n        emacsPlugin,\n        hideNativeSelection,\n        vimPanelState\n    ];\n}\nvar specialKey = {\n    Return: 'Return', Escape: 'Esc', Insert: 'Ins',\n    ArrowLeft: 'Left', ArrowRight: 'Right', ArrowUp: 'Up', ArrowDown: 'Down',\n    Enter: 'Return', Divide: '/', Slash: '/', Multiply: '*',\n    Subtract: '-', Minus: \"-\", Equal: '=',\n};\nvar ignoredKeys = { Shift: 1, Alt: 1, Command: 1, Control: 1, CapsLock: 1 };\nconst commandKeyBinding = {};\nclass EmacsHandler {\n    constructor(view) {\n        this.view = view;\n        // commands\n        this.$data = {\n            count: 0,\n            keyChain: \"\",\n            lastCommand: \"\"\n        };\n        // mark\n        this.$emacsMarkRing = [];\n        this.$emacsMark = null;\n    }\n    static bindKey(keyGroup, command) {\n        keyGroup.split(\"|\").forEach(function (binding) {\n            let chain = \"\";\n            let parts = binding.split(/\\s+/);\n            parts.forEach(function (keyGroup, index) {\n                let modifiers = keyGroup.split(/-(?=.)/);\n                let key = modifiers.pop();\n                if (modifiers.length) {\n                    chain += modifiers.sort().join(\"-\") + \"-\";\n                }\n                chain += key;\n                if (index === parts.length - 1) {\n                    commandKeyBinding[chain] = command;\n                }\n                else {\n                    commandKeyBinding[chain] = \"null\";\n                    chain += \" \";\n                }\n            });\n        });\n    }\n    static getKey(e) {\n        var code = e.code;\n        var key = e.key;\n        if (ignoredKeys[key])\n            return ['', '', ''];\n        if (code.length > 1) {\n            if (code[0] == \"N\")\n                code = code.replace(/^Numpad/, \"\");\n            if (code[0] == \"K\")\n                code = code.replace(/^Key/, \"\");\n        }\n        code = specialKey[code] || code;\n        if (code.length == 1)\n            code = code.toLowerCase();\n        var modifier = '';\n        if (e.ctrlKey) {\n            modifier += 'C-';\n        }\n        if (e.metaKey) {\n            modifier += 'CMD-';\n        }\n        if (e.altKey) {\n            modifier += 'M-';\n        }\n        if (e.shiftKey) {\n            modifier += 'S-';\n        }\n        return [code, modifier, key];\n    }\n    static addCommands(commands) {\n        Object.keys(commands).forEach(function (name) {\n            var command = commands[name];\n            if (typeof command == \"function\") {\n                command = { exec: command };\n            }\n            EmacsHandler.commands[name] = command;\n        });\n    }\n    static execCommand(command, handler, args, count = 1) {\n        var commandResult = undefined;\n        if (typeof command === \"function\") {\n            for (var i = 0; i < count; i++)\n                command(handler.view);\n        }\n        else if (command === \"null\") ;\n        else if (command.exec) {\n            if (count > 1 && command.handlesCount) {\n                if (!args)\n                    args = {};\n                if (typeof args === 'object')\n                    args.count = count;\n                count = 1;\n            }\n            for (var i = 0; i < count; i++)\n                commandResult = command.exec(handler, args || {});\n        }\n        else {\n            throw new Error(\"missformed command\");\n        }\n        return commandResult;\n    }\n    ;\n    handleKeyboard(e) {\n        var keyData = EmacsHandler.getKey(e);\n        var result = this.findCommand(keyData);\n        if (result && result.command) {\n            var commandResult = EmacsHandler.execCommand(result.command, this, result.args, result.count);\n            if (commandResult === false)\n                return;\n        }\n        return result;\n    }\n    findCommand([key, modifier, text]) {\n        // if keyCode == -1 a non-printable key was pressed, such as just\n        // control. Handling those is currently not supported in this handler\n        if (!key)\n            return undefined;\n        var editor = this;\n        var data = this.$data;\n        // editor._signal(\"changeStatus\");\n        // insertstring data.count times\n        if (!modifier && key.length == 1) {\n            editor.pushEmacsMark();\n            if (data.count) {\n                var str = new Array(data.count + 1).join(text);\n                data.count = null;\n                return { command: \"insertstring\", args: str };\n            }\n        }\n        // CTRL + number / universalArgument for setting data.count\n        if (modifier == \"C-\" || data.count) {\n            var count = parseInt(key[key.length - 1]);\n            if (typeof count === 'number' && !isNaN(count)) {\n                data.count = Math.max(data.count || 0, 0);\n                data.count = 10 * data.count + count;\n                return { command: \"null\" };\n            }\n        }\n        // this.commandKeyBinding maps key specs like \"c-p\" (for CTRL + P) to\n        // command objects, for lookup key needs to include the modifier\n        if (modifier)\n            key = modifier + key;\n        // Key combos like CTRL+X H build up the data.keyChain\n        if (data.keyChain)\n            key = data.keyChain += \" \" + key;\n        // Key combo prefixes get stored as \"null\" (String!) in this\n        // this.commandKeyBinding. When encountered no command is invoked but we\n        // buld up data.keyChain\n        var command = commandKeyBinding[key];\n        data.keyChain = command == \"null\" ? key : \"\";\n        // there really is no command\n        if (!command)\n            return undefined;\n        // we pass b/c of key combo or universalArgument\n        if (command === \"null\")\n            return { command: \"null\" };\n        if (command === \"universalArgument\") {\n            // if no number pressed emacs repeats action 4 times.\n            // minus sign is needed to allow next keypress to replace it\n            data.count = -4;\n            return { command: \"null\" };\n        }\n        // lookup command\n        // TODO extract special handling of markmode\n        // TODO special case command.command is really unnecessary, remove\n        var args;\n        if (typeof command !== \"string\") {\n            args = command.args;\n            if (command.command)\n                command = command.command;\n        }\n        if (command === \"insertstring\" ||\n            command === commands.splitLine ||\n            command === commands.toggleComment) {\n            editor.pushEmacsMark();\n        }\n        if (typeof command === \"string\") {\n            command = EmacsHandler.commands[command];\n            if (!command)\n                return undefined;\n        }\n        if (!command.readOnly && !command.isYank)\n            data.lastCommand = null;\n        var count = data.count || 1;\n        if (data.count)\n            data.count = 0;\n        return { command, args, count };\n    }\n    showCommandLine(text) {\n        console.error(\"TODO\");\n    }\n    updateMarksOnChange(change) {\n        if (this.$emacsMark) {\n            this.$emacsMark = this.updateMark(this.$emacsMark, change);\n        }\n        this.$emacsMarkRing = this.$emacsMarkRing.map(x => {\n            return this.updateMark(x, change);\n        }).filter(Boolean);\n    }\n    updateMark(mark, change) {\n        if (!mark)\n            return;\n        var updated = mark.map(function (x) {\n            return change.mapPos(x, 1, MapMode.TrackDel);\n        }).filter(x => x != null);\n        return updated.length == 0 ? null : updated;\n    }\n    emacsMark() {\n        return this.$emacsMark;\n    }\n    ;\n    setEmacsMark(p) {\n        // to deactivate pass in a falsy value\n        this.$emacsMark = p;\n    }\n    ;\n    pushEmacsMark(p, activate) {\n        var prevMark = this.$emacsMark;\n        if (prevMark)\n            this.$emacsMarkRing.push(prevMark);\n        if (!p || activate)\n            this.setEmacsMark(p);\n        else\n            this.$emacsMarkRing.push(p);\n    }\n    ;\n    popEmacsMark() {\n        var mark = this.emacsMark();\n        if (mark) {\n            this.setEmacsMark(null);\n            return mark;\n        }\n        return this.$emacsMarkRing.pop();\n    }\n    ;\n    getLastEmacsMark() {\n        return this.$emacsMark || this.$emacsMarkRing.slice(-1)[0];\n    }\n    ;\n    getCopyText() {\n        var state = this.view.state;\n        return state.selection.ranges.map(r => state.sliceDoc(r.from, r.to)).join(\"\\n\");\n    }\n    clearSelection() {\n        var view = this.view;\n        var selection = view.state.selection;\n        var isEmpty = !selection.ranges.some(r => r.from != r.to);\n        if (isEmpty)\n            return false;\n        var newRanges = selection.ranges.map(x => {\n            return EditorSelection.range(x.head, x.head);\n        });\n        view.dispatch({\n            selection: EditorSelection.create(newRanges, selection.mainIndex)\n        });\n        return true;\n    }\n    onPaste(text) {\n        var view = this.view;\n        var selection = view.state.selection;\n        var linesToInsert;\n        if (selection.ranges.length > 1) {\n            var lines = text.split(\"\\n\");\n            if (lines.length == selection.ranges.length) {\n                linesToInsert = lines;\n            }\n        }\n        var i = 0;\n        var specs = view.state.changeByRange((range) => {\n            var toInsert = linesToInsert ? linesToInsert[i] : text;\n            i++;\n            return {\n                changes: { from: range.from, to: range.to, insert: toInsert },\n                range: EditorSelection.cursor(range.from + toInsert.length)\n            };\n        });\n        view.dispatch(specs);\n    }\n}\nEmacsHandler.commands = {};\nconst emacsKeys = {\n    // movement\n    \"Up|C-p\": { command: \"goOrSelect\", args: [commands.cursorLineUp, commands.selectLineUp] },\n    \"Down|C-n\": { command: \"goOrSelect\", args: [commands.cursorLineDown, commands.selectLineDown] },\n    \"Left|C-b\": { command: \"goOrSelect\", args: [commands.cursorCharBackward, commands.selectCharBackward] },\n    \"Right|C-f\": { command: \"goOrSelect\", args: [commands.cursorCharForward, commands.selectCharForward] },\n    \"C-Left|M-b\": { command: \"goOrSelect\", args: [commands.cursorGroupLeft, commands.selectGroupLeft] },\n    \"C-Right|M-f\": { command: \"goOrSelect\", args: [commands.cursorGroupRight, commands.selectGroupRight] },\n    \"Home|C-a\": { command: \"goOrSelect\", args: [commands.cursorLineStart, commands.selectLineStart] },\n    \"End|C-e\": { command: \"goOrSelect\", args: [commands.cursorLineEnd, commands.selectLineEnd] },\n    \"C-Home|S-M-,\": { command: \"goOrSelect\", args: [commands.cursorDocStart, commands.selectDocStart] },\n    \"C-End|S-M-.\": { command: \"goOrSelect\", args: [commands.cursorDocEnd, commands.selectDocEnd] },\n    // selection\n    \"S-Up|S-C-p\": commands.selectLineUp,\n    \"S-Down|S-C-n\": commands.selectLineDown,\n    \"S-Left|S-C-b\": commands.selectCharBackward,\n    \"S-Right|S-C-f\": commands.selectCharForward,\n    \"S-C-Left|S-M-b\": commands.selectGroupBackward,\n    \"S-C-Right|S-M-f\": commands.selectGroupForward,\n    \"S-Home|S-C-a\": commands.selectLineStart,\n    \"S-End|S-C-e\": commands.selectLineEnd,\n    \"S-C-Home\": commands.selectDocStart,\n    \"S-C-End\": commands.selectDocEnd,\n    \"C-l\": \"recenterTopBottom\",\n    \"M-s\": \"centerSelection\",\n    \"M-g\": \"gotoline\",\n    \"C-x C-p|C-x h\": commands.selectAll,\n    \"PageDown|C-v|C-Down\": { command: \"goOrSelect\", args: [commands.cursorPageDown, commands.selectPageDown] },\n    \"PageUp|M-v|C-Up\": { command: \"goOrSelect\", args: [commands.cursorPageUp, commands.selectPageDown] },\n    \"S-C-Down\": commands.selectPageDown,\n    \"S-C-Up\": commands.selectPageUp,\n    // TODO use iSearch\n    \"C-s\": openSearchPanel,\n    \"C-r\": openSearchPanel,\n    \"M-C-s\": \"findnext\",\n    \"M-C-r\": \"findprevious\",\n    \"S-M-5\": \"replace\",\n    // basic editing\n    \"Backspace\": commands.deleteCharBackward,\n    \"Delete|C-d\": commands.deleteCharForward,\n    \"Return|C-m\": { command: \"insertstring\", args: \"\\n\" },\n    \"C-o\": commands.splitLine,\n    \"M-d|C-Delete\": { command: \"killWord\", args: \"right\" },\n    \"C-Backspace|M-Backspace|M-Delete\": { command: \"killWord\", args: \"left\" },\n    \"C-k\": \"killLine\",\n    \"M-h\": \"selectParagraph\",\n    \"M-@|M-S-2\": \"markWord\",\n    \"C-y|S-Delete\": \"yank\",\n    \"M-y\": \"yankRotate\",\n    \"C-g\": \"keyboardQuit\",\n    \"C-w|C-S-w\": \"killRegion\",\n    \"M-w\": \"killRingSave\",\n    \"C-Space\": \"setMark\",\n    \"C-x C-x\": \"exchangePointAndMark\",\n    \"C-t\": commands.transposeChars,\n    \"M-u\": { command: \"changeCase\", args: { dir: 1 } },\n    \"M-l\": { command: \"changeCase\", args: { dir: -1 } },\n    \"C-x C-u\": { command: \"changeCase\", args: { dir: 1, region: true } },\n    \"C-x C-l\": { command: \"changeCase\", args: { dir: 1, region: true } },\n    \"M-/\": startCompletion,\n    \"C-u\": \"universalArgument\",\n    \"M-;\": commands.toggleComment,\n    \"C-/|C-x u|S-C--|C-z\": commands.undo,\n    \"S-C-/|S-C-x u|C--|S-C-z\": commands.redo,\n    // vertical editing\n    \"C-x r\": \"selectRectangularRegion\",\n    \"M-x\": { command: \"focusCommandLine\", args: \"M-x \" },\n    // todo\n    // \"C-x C-t\" \"M-t\" \"M-c\" \"F11\" \"C-M- \"M-q\"\n    \"Esc\": \"unsetTransientMark\"\n};\nfor (let i in emacsKeys) {\n    /*@__PURE__*/EmacsHandler.bindKey(i, emacsKeys[i]);\n}\n/*@__PURE__*/EmacsHandler.addCommands({\n    unsetTransientMark: function (handler) {\n        handler.setEmacsMark(null);\n        return false;\n    },\n    markWord: function (handler, args) {\n    },\n    selectParagraph: function (handler, args) {\n        var view = handler.view;\n        var head = view.state.selection.ranges[0].head;\n        var doc = view.state.doc;\n        var startLine = doc.lineAt(head);\n        var start = -1;\n        var end = -1;\n        var line = startLine;\n        while (/\\S/.test(line.text) && line.from > 0) {\n            start = line.from;\n            line = view.state.doc.lineAt(line.from - 1);\n        }\n        if (start == -1) {\n            while (!/\\S/.test(line.text) && line.to < doc.length) {\n                start = line.from;\n                line = view.state.doc.lineAt(line.to + 1);\n            }\n        }\n        else {\n            line = startLine;\n        }\n        while (/\\S/.test(line.text) && line.to < doc.length) {\n            end = line.to;\n            line = view.state.doc.lineAt(line.to + 1);\n        }\n        if (end == -1) {\n            end = startLine.to;\n        }\n        var newRanges = [EditorSelection.range(start, end)];\n        view.dispatch({\n            selection: EditorSelection.create(newRanges)\n        });\n    },\n    goOrSelect: {\n        exec: function (handler, args) {\n            var command = handler.emacsMark() ? args[1] : args[0];\n            command(handler.view);\n        }\n    },\n    changeCase: function (handler, args) {\n        var view = handler.view;\n        if (!args.region) {\n            handler.clearSelection();\n            commands.selectGroupForward(view);\n        }\n        var specs = view.state.changeByRange((range) => {\n            var toInsert = view.state.sliceDoc(range.from, range.to);\n            toInsert = args.dir == 1 ? toInsert.toUpperCase() : toInsert.toLowerCase();\n            return {\n                changes: { from: range.from, to: range.to, insert: toInsert },\n                range: EditorSelection.cursor(range.from + toInsert.length)\n            };\n        });\n        view.dispatch(specs);\n    },\n    centerSelection: function (handler) {\n        handler.view.dispatch({ scrollIntoView: true });\n    },\n    recenterTopBottom: function (handler) {\n        var view = handler.view;\n        var scrollTop = view.scrollDOM.scrollTop;\n        view.dispatch({ scrollIntoView: true });\n        try {\n            // force synchronous measurment\n            view.measure(true);\n        }\n        catch (e) { }\n        if (scrollTop != view.scrollDOM.scrollTop)\n            return;\n        var base = view.scrollDOM.getBoundingClientRect();\n        var cursor = view.coordsAtPos(view.state.selection.main.head);\n        if (!cursor)\n            return;\n        var lineHeight = cursor.bottom - cursor.top;\n        var screenHeight = base.height;\n        var cursorTop = cursor.top - base.top;\n        if (Math.abs(cursorTop) < lineHeight / 4) {\n            scrollTop += cursorTop + lineHeight - screenHeight + 2;\n        }\n        else if (Math.abs(cursorTop - screenHeight * 0.5) < lineHeight / 4) {\n            scrollTop += cursorTop - 2;\n        }\n        else {\n            scrollTop += cursorTop - screenHeight * 0.5;\n        }\n        view.scrollDOM.scrollTop = scrollTop;\n    },\n    selectRectangularRegion: function (handler) {\n        var view = handler.view;\n        var ranges = view.state.selection.ranges;\n        var newRanges = [];\n        if (ranges.length > 1) {\n            newRanges.push(EditorSelection.range(ranges[0].from, ranges[ranges.length - 1].to));\n        }\n        else {\n            let doc = view.state.doc;\n            let startLine = doc.lineAt(ranges[0].from);\n            let endLine = doc.lineAt(ranges[0].to);\n            let startCollumn = ranges[0].from - startLine.from;\n            let endCollumn = ranges[0].to - endLine.from;\n            while (startLine.from < endLine.to) {\n                newRanges.push(EditorSelection.range(startLine.from + startCollumn, startLine.from + endCollumn));\n                if (startLine.to + 1 >= doc.length)\n                    break;\n                startLine = doc.lineAt(startLine.to + 1);\n            }\n        }\n        view.dispatch({\n            selection: EditorSelection.create(newRanges)\n        });\n    },\n    setMark: {\n        exec: function (handler, args) {\n            var view = handler.view;\n            var ranges = view.state.selection.ranges;\n            // Sets mark-mode and clears current selection.\n            // When mark is set, keyboard cursor movement commands become\n            // selection modification commands. That is,\n            // \"goto\" commands become \"select\" commands.\n            // Any insertion or mouse click resets mark-mode.\n            // setMark twice in a row at the same place resets markmode.\n            // in multi select mode, ea selection is handled individually\n            if (args && args.count) {\n                var mark = handler.popEmacsMark();\n                if (mark) {\n                    var newRanges = mark.map((p) => {\n                        return EditorSelection.cursor(p, p);\n                    });\n                    view.dispatch({\n                        selection: EditorSelection.create(newRanges)\n                    });\n                }\n                return;\n            }\n            var mark = handler.emacsMark();\n            var rangePositions = ranges.map(function (r) { return r.from; });\n            var hasNoSelection = ranges.every(function (range) { return range.from == range.to; });\n            // if transientMarkModeActive then mark behavior is a little\n            // different. Deactivate the mark when setMark is run with active\n            // mark\n            if ((mark || !hasNoSelection)) {\n                handler.clearSelection();\n                if (mark)\n                    handler.pushEmacsMark(null);\n                return;\n            }\n            if (!mark) {\n                handler.pushEmacsMark(rangePositions);\n                handler.setEmacsMark(rangePositions);\n                return;\n            }\n            // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n        },\n        readOnly: true,\n        handlesCount: true\n    },\n    exchangePointAndMark: {\n        exec: function exchangePointAndMark$exec(handler, args) {\n            var view = handler.view;\n            var selection = view.state.selection;\n            var isEmpty = !selection.ranges.some(r => r.from != r.to);\n            if (!args.count && !isEmpty) { // just invert selection\n                var newRanges = selection.ranges.map(x => {\n                    return EditorSelection.range(x.head, x.anchor);\n                });\n                view.dispatch({\n                    selection: EditorSelection.create(newRanges, selection.mainIndex)\n                });\n                return;\n            }\n            var markRing = handler.$emacsMarkRing;\n            var lastMark = markRing[markRing.length - 1];\n            if (!lastMark)\n                return;\n            if (args.count) { // replace mark and point\n                handler.clearSelection();\n                var newRanges = lastMark.map(x => {\n                    return EditorSelection.range(x, x);\n                });\n                view.dispatch({\n                    selection: EditorSelection.create(newRanges, selection.mainIndex)\n                });\n            }\n            else { // create selection to last mark\n                var n = Math.min(lastMark.length, selection.ranges.length);\n                newRanges = [];\n                for (var i = 0; i < n; i++) {\n                    newRanges.push(EditorSelection.range(selection.ranges[i].head, lastMark[i]));\n                }\n            }\n        },\n        readOnly: true,\n        handlesCount: true,\n    },\n    killWord: {\n        exec: function (handler, dir) {\n            var view = handler.view;\n            var selection = view.state.selection;\n            var newRanges = selection.ranges.map(x => {\n                return EditorSelection.range(x.head, x.head);\n            });\n            view.dispatch({\n                selection: EditorSelection.create(newRanges, selection.mainIndex)\n            });\n            if (dir == \"left\")\n                commands.selectGroupBackward(view);\n            else\n                commands.selectGroupForward(view);\n            selection = view.state.selection;\n            selection.ranges.forEach(r => {\n                var text = view.state.sliceDoc(r.from, r.to);\n                killRing.add(text);\n            });\n            view.dispatch(view.state.replaceSelection(\"\"));\n        },\n    },\n    killLine: function (handler) {\n        handler.pushEmacsMark(null);\n        // don't delete the selection if it's before the cursor\n        handler.clearSelection();\n        commands.selectLineEnd(handler.view);\n        var view = handler.view;\n        var state = view.state;\n        var text = [];\n        var changes = handler.view.state.selection.ranges.map(function (range) {\n            var from = range.from;\n            var to = range.to;\n            var line = state.sliceDoc(from, to);\n            text.push(line);\n            // remove EOL if only whitespace remains after the cursor\n            if (/^\\s*$/.test(line)) {\n                to += 1;\n                text.push(\"\\n\");\n            }\n            return { from, to, insert: \"\" };\n        });\n        if (handler.$data.lastCommand == \"killLine\")\n            killRing.append(text.join(\"\\n\"));\n        else\n            killRing.add(text.join(\"\\n\"));\n        view.dispatch({ changes });\n    },\n    yank: function (handler) {\n        handler.onPaste(killRing.get());\n        handler.$data.lastCommand = \"yank\";\n    },\n    yankRotate: function (handler) {\n        if (handler.$data.lastCommand != \"yank\")\n            return;\n        commands.undo(handler.view);\n        handler.$emacsMarkRing.pop(); // also undo recording mark\n        handler.onPaste(killRing.rotate());\n        handler.$data.lastCommand = \"yank\";\n    },\n    killRegion: {\n        exec: function (handler) {\n            killRing.add(handler.getCopyText());\n            var view = handler.view;\n            view.dispatch(view.state.replaceSelection(\"\"));\n            handler.setEmacsMark(null);\n        },\n    },\n    killRingSave: {\n        exec: function (handler) {\n            var text = handler.getCopyText();\n            killRing.add(text);\n            handler.clearSelection();\n            navigator.clipboard.writeText(text);\n        },\n        readOnly: true\n    },\n    keyboardQuit: function (handler) {\n        var view = handler.view;\n        var selection = view.state.selection;\n        var isEmpty = !selection.ranges.some(r => r.from != r.to);\n        if (selection.ranges.length > 1 && !isEmpty) {\n            var newRanges = selection.ranges.map(x => {\n                return EditorSelection.range(x.head, x.head);\n            });\n            view.dispatch({\n                selection: EditorSelection.create(newRanges, selection.mainIndex)\n            });\n        }\n        else {\n            commands.simplifySelection(handler.view);\n        }\n        handler.setEmacsMark(null);\n        handler.$data.count = null;\n    },\n    focusCommandLine: function (handler, arg) {\n        handler.showCommandLine(arg);\n    }\n});\nconst killRing = {\n    $data: [],\n    add: function (str) {\n        str && this.$data.push(str);\n        if (this.$data.length > 30)\n            this.$data.shift();\n    },\n    append: function (str) {\n        var idx = this.$data.length - 1;\n        var text = this.$data[idx] || \"\";\n        if (str)\n            text += str;\n        if (text)\n            this.$data[idx] = text;\n    },\n    get: function (n) {\n        n = n || 1;\n        return this.$data.slice(this.$data.length - n, this.$data.length).reverse().join('\\n');\n    },\n    pop: function () {\n        if (this.$data.length > 1)\n            this.$data.pop();\n        return this.get();\n    },\n    rotate: function () {\n        let last = this.$data.pop();\n        if (last)\n            this.$data.unshift(last);\n        return this.get();\n    }\n};\n\nexport { emacs, emacsKeys };\n"],
  "mappings": "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",
  "names": ["Prec", "StateEffect", "StateField", "MapMode", "EditorSelection", "EditorView", "Direction", "ViewPlugin", "showPanel", "commands", "startCompletion", "openSearchPanel", "Piece", "left", "top", "height", "className", "letter", "partial", "elt", "p", "BlockCursorPlugin", "view", "update", "state", "cursors", "r", "prim", "piece", "measureCursor", "c", "i", "oldCursors", "idx", "themeSpec", "hideNativeSelection", "getBase", "rect", "cm", "cursor", "primary", "head", "hCoeff", "pos", "base", "h", "emacsStyle", "emacsPlugin", "EmacsHandler", "e", "result", "showVimPanel", "vimPanelState", "value", "tr", "f", "on", "createVimPanel", "dom", "emacs", "options", "specialKey", "ignoredKeys", "commandKeyBinding", "_EmacsHandler", "keyGroup", "command", "binding", "chain", "parts", "index", "modifiers", "key", "code", "modifier", "name", "handler", "args", "count", "commandResult", "keyData", "text", "editor", "data", "str", "change", "x", "mark", "updated", "activate", "prevMark", "selection", "isEmpty", "newRanges", "linesToInsert", "lines", "specs", "range", "toInsert", "emacsKeys", "doc", "startLine", "start", "end", "line", "scrollTop", "lineHeight", "screenHeight", "cursorTop", "ranges", "endLine", "startCollumn", "endCollumn", "rangePositions", "hasNoSelection", "markRing", "lastMark", "n", "dir", "killRing", "changes", "from", "to", "arg", "last"]
}
